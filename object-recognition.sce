 /*
* Object recognition with scilab
*@author ghouibi ghassen
*@date April 2019
*/
f=figure('figure_position',[190,50],...
'figure_size',[1050,650],...
'auto_resize','on',...
'background',[2],...
'figure_name','Object recognition',...
'dockable','off',...
'infobar_visible','off',...
'toolbar_visible','off',...
'menubar_visible','off',...
'default_axes','on',...
'visible','off');


handles.dummy = 0;



//Original
handles.Original=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.88,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Original version',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Original',...
'Callback','Original(handles)')

//Mirror
handles.Mirror=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.78,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Mirror',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Mirror',...
'Callback','Mirror(handles)')


//Flou filter
handles.Flou=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[100],...
'Min',[0],...
'Position',[0.001,0.68,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Flou',...
'Style','slider',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Flou',...
'Callback','Flou(handles)')


//Grey Filter
handles.greyFilter=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.58,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Grey Filter',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Load',...
'Callback','GreyFilter(handles)')

//Sobel
handles.SobelFilter=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.48,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Sobel Filter',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Load',...
'Callback','Sobel(handles)')

//Laplacian
handles.newFilter=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.38,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Laplacian Filter',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Laplacian',...
'Callback','Laplacian(handles)')

//Zomm In 
handles.zoomIn=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.28,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Zoom In',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Zoom',...
'Callback','ZoomIn(handles)')

//Zomm Out 
handles.zoomOut=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.18,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Zoom Out',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Zoom',...
'Callback','ZoomOut(handles)')

//Save IMG
handles.saveIMG=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.001,0.08,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Save IMG',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Save',...
'Callback','SaveIMG(handles)')
/*------------------------------Right button-----------------------------*/

//Loading Image
handles.Load=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.88,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Load Image',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Load',...
'Callback','LoadIMG(handles)')

//Take Photo
handles.takePhoto=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.78,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Take Photo',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Webcam',...
'Callback','TakePhoto(handles)')


//Detect object
handles.ObjectDetection=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.68,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Object Detection',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Object',...
'Callback','ObjectDetect(handles)')

//Number Detection
handles.numberDetection=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.58,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Number Detection',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Object',...
'Callback','NumberDetection(handles)')


//CNN init
handles.InitCNN=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.48,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','CNN Init',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','CNN',...
'Callback','InitCNN(handles)')

//live webcam
handles.LiveWebCam=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[13],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.38,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Live Webcam',...
'Style','radiobutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','LiveWebcam',...
'Callback','LiveWebcam(handles)')


//Close
handles.close=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[13],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.28,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Close Webcam',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Close',...
'Callback','Close(handles)')




//Clear
handles.clear=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.18,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Clear',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Clear',...
'Callback','Clear(handles)')


//Help
handles.Help=uicontrol(f,...
'unit','normalized',...
'BackgroundColor',[-1,-1,-1],...
'Enable','on',...
'FontAngle','normal',...
'FontName','Tahoma',...
'FontSize',[11],...
'FontUnits','points',...
'FontWeight','normal',...
'ForegroundColor',[-1,-1,-1],...
'HorizontalAlignment','center',...
'ListboxTop',[],...
'Max',[1],...
'Min',[0],...
'Position',[0.83,0.08,0.13,0.07],...
'Relief','default',...
'SliderStep',[0.01,0.01],...
'String','Help',...
'Style','pushbutton',...
'Value',[0],...
'VerticalAlignment','middle',...
'Visible','on',...
'Tag','Help',...
'Callback','Help(handles)')
handles.Axes1= newaxes();
handles.Axes1.margins = [ 0 0 0 0];
handles.Axes1.axes_bounds = [0.15,0.015,0.65,0.95];
handles.Axes1.auto_clear = 'on';
f.visible = "on";



/*--------------right buttons function-----------------------------*/
/*
* Getting the original version of picture
*/
function Original(handles)
    disp("Original");
    S2 = handles.S;
    imshow(S2);
    handles.S2 = S2;
    handles = resume(handles);
endfunction
/*
* Making mirror effet
*/
function Mirror(handles)
    
    a=~handles.M;
    disp(a);
    if a then
        S2 = handles.S2(:,$:-1:1,:);
    else
        S2=handles.S;
    end
    
    imshow(S2);
    handles.M=a;
    handles.S2 = S2;
    handles = resume(handles);
endfunction
/*
* Flotting the picture
*/
function Flou(handles)
    disp("Flou");
    F = handles.S;
    x=get(handles.Flou,'value')
    y=round(x/10);
    disp(y);
    if y==0 then
        e=handles.S;
    else
        filter = fspecial('average',y);
        e = imfilter(F, filter);
    end

    imshow(e);
    disp(typeof(e));
    handles.S2 = e;
    handles = resume(handles);
    
endfunction
/*
* Applicate Grey filter
*/
function GreyFilter(handles)
    disp(handles.S)
    S2 = rgb2gray(handles.S2);
    disp(typeof(S2));
    imshow(S2);
    handles.S2 = S2;
    handles = resume(handles);
endfunction
/*
* Applicate Sobel filter
*/
function Sobel(handles)
   disp("Sobel");
    S2 = handles.S2;
    filter = fspecial('sobel'); 
    FSImg = imfilter(S2, filter);
    imshow(FSImg);
    handles.S=S2;
    handles.S2 = FSImg;
    handles.S3 ="Sobel";
    handles = resume(handles);
endfunction

/*
* Applicate Laplacian filter
*/
function Laplacian(handles)
    disp("Laplacian");
    S2 = handles.S2;
    filter = fspecial('laplacian',0);
    imf = filter2(S2,filter);
    e = im2uint8(imf)
    imshow(e);  
    handles.S=S2;
    handles.S2 = e ;
    handles = resume(handles);
endfunction


/*
* This function zoom the image with crop in the zone choosed by the user
*/
function ZoomIn(handles)
    im = handles.S2;
    rect1=rubberbox();
    imheight=size(im,"r");
    disp(imheight);
    rect1(2)=imheight-rect1(2);   
    zoomed=imcrop(im,rect1);
    imshow(zoomed);
    height=size(zoomed,"r");
    handles.S2=zoomed;
    handles = resume(handles);
endfunction

//TODO
function ZoomOut(handles)

endfunction

/*
*This function save current image shown in the canvas 
*/
function SaveIMG(handles)
    
   disp("Saving Picture");
   imageTosave=handles.S2;
   imshow(imageTosave);
   [fileName,filePath]=uiputfile(["*.jpeg"; "*.png"; "*.jpg"]);
   fileName=fullfile(filePath,fileName);
   imwrite(imageTosave,string(fileName+".jpg"));

endfunction

/*--------------right buttons function-----------------------------*/

/*
* This function load a new image and display it
*/
function LoadIMG(handles)
    disp("LoadIMG"); 
    fn = uigetfile('*'); 
    disp(fn);
    S = imread(fn);
    imshow(S);
    handles.S = S;
    handles.S2=S;
    handles.M =0;
    handles = resume(handles);
endfunction

/*
*This function allow to user to take photo with webcam
*/
function TakePhoto(handles)
    n = camopen(0);
    S = camread(n); //get a frame
    imshow(S);
    camcloseall();
    handles.S = S;
    handles.M = 0;
    handles = resume(handles);
endfunction

/*
* This function detect white object in a image
*/
function ObjectDetect(handles)
    im=handles.S;
    imshow(im);
    S2=rgb2gray(im);
    S3=S2>180;
    handles.S3=S3;
    winId=progressionbar('Do something');
    realtimeinit(0.3);
    for j=0:0.1:1,
      realtime(3*j);
      progressionbar(winId+3);
    end
    close(winId);
    
endfunction

/*
* This function detect numbers in a image
*/
function NumberDetection(handles)
    im=handles.S;
    imshow(im);
    S2=rgb2gray(im);
    [row,col]=find(S2==255);    //row & column indices where IM = 1 (= edge)
disp([row',col'],"Egde coordinates (row, col)");
    // L'échantillon aléatoire gaussien
d = rand(1, 10000, 'normal');

[cf, ind] = histc(20, 10, normalization=%f)
// On utilise histplot pour avoir une représentation graphique
 histplot(20, 10, normalization=%f);
    
endfunction

/*
* This function is for algorithm in python (Convonlutional neural network)
*/
function InitCNN(handles)
    disp(handles.S)
endfunction
/*
*This function open a live webcam streaming
*/
function LiveWebcam(handles)
    handles.web=1;
    n = camopen(0);
    im = camread(n); //get a frame
    handles.web=1;
    imshow(im);
    tic();
    for cnt = 1:150
        
        disp(handles.web)
        im = camread(n);
        imshow(im);
    end
    t = toc();
    disp("FPS : " + string(100/t));
    //handles.S = S;
    handles = resume(handles);
endfunction

/*
* This function close webcam the program
*/
function Close(handles)
    disp("Clossing");
    handles.web=0;
    camcloseall();
    handles = resume(handles);
    return 0;
endfunction
/*
*This function juste load an white image background
* //TODO
*/
function Clear(handles)
    S=imread('C:\Users\XYZ\Desktop\Object-recognition\reset.jpg');
    imshow(S);
    handles.S=S;
    handles=resume(handles);
endfunction
/*
* This function display how this program work
*/
function Help(handles) 
    messagebox("message comming soon","Help", ["Yes" "No"]);
endfunction
